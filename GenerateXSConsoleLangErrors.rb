#!/usr/bin/env ruby
#
# This is not a shipped file.  It generates the file named in outputFilename from
# the resx errors file

outputFilename = "XSConsoleLangErrors.py"

if ARGV.size != 1:
  puts "usage: #{$0} <filename>"
  puts "Please supply the filename for api.hg/ocaml/idl/FriendlyErrorNames.resx"
  abort
end

header = [
"# coding: UTF-8",
"# Copyright (c) Citrix Systems 2008. All rights reserved.",
"# xsconsole is proprietary software.",
"#",
"# Xen, the Xen logo, XenCenter, XenMotion are trademarks or registered",
"# trademarks of Citrix Systems, Inc., in the United States and other",
"# countries.",
"#",
"# Generated by #{File.basename($0)} #{Time.now}",
"# from #{File.basename(ARGV[0])} last modified #{File.mtime(ARGV[0])}",
"",
"class LangErrors:",
"  @classmethod",
"  def Translate(cls, inTag):",
"    return cls.errorMap.get(inTag, inTag)",
"",
"  errorMap = {"
]

footer = [
"  }"
]

errorMap = {}

File.open(ARGV[0]) do |file|
  name = nil
  file.each_line do |line|
    if name
      if line =~ /<value>([^<]+?)\.?<\/value>/ # Also removes trailing full stop
        errorMap[name] = $1.gsub("'") { "\\\'" } # Replace ' with \'
      end
      name = nil
    else
      if line =~ /<data name="([^"]+)" xml:space="preserve">/
        name=$1
      end
    end
  end
end

File.open(outputFilename, 'w') do |file|
  header.each { |line| file.write("#{line}\n") }
  errorMap.sort.each { |key, value| file.write("    '#{key}' : '#{value}',\n") }
  footer.each { |line| file.write("#{line}\n") }
end
